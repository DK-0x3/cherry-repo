#!/usr/bin/env node

const { execSync } = require("child_process");
const degit = require("degit");
const path = require("path");
const url = require("url");

const args = process.argv.slice(2);

if (args.length < 2) {
    console.error("‚ùå –£–∫–∞–∂–∏ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –∏ –∏–º—è –ø—Ä–æ–µ–∫—Ç–∞!");
    console.log("üëâ –ü—Ä–∏–º–µ—Ä: npx cherry-repo user/repo my-app [--commit] [--path ./projects]");
    process.exit(1);
}

let REPO = args[0];
const PROJECT_NAME = args[1]; // –ø–∞–ø–∫–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è

// –∏—â–µ–º —Ñ–ª–∞–≥ --path
let basePath = process.cwd();
const pathIndex = args.indexOf("--path");
if (pathIndex !== -1 && args[pathIndex + 1]) {
    basePath = path.resolve(args[pathIndex + 1]);
}

const TARGET_DIR = path.join(basePath, PROJECT_NAME);

// –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
let repoName, branch;
if (REPO.startsWith("http")) {
    const [cleanUrl, branchName] = REPO.split("#");
    const parsed = url.parse(cleanUrl);
    const parts = parsed.pathname.replace(/\.git$/, "").split("/");
    repoName = `${parts[1]}/${parts[2]}`;
    branch = branchName || branch; // –µ—Å–ª–∏ –≤–µ—Ç–∫–∞ —É–∫–∞–∑–∞–Ω–∞ –ø–æ—Å–ª–µ #, –±–µ—Ä—ë–º –µ—ë
} else {
    // user/repo#branch
    [repoName, branch = "master"] = REPO.split("#");
}

const branchIndex = args.indexOf("--branch");
if (branchIndex !== -1 && args[branchIndex + 1]) {
    branch = args[branchIndex + 1];
}

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –≤–µ—Ç–∫–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —É–¥–∞–ª—ë–Ω–Ω–æ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏
 */
function checkBranch(repo, branch) {
    try {
        const result = execSync(
            `git ls-remote --heads https://github.com/${repo}.git ${branch}`,
            { stdio: "pipe" }
        ).toString().trim();

        return result.length > 0; // –µ—Å–ª–∏ –ø—É—Å—Ç–æ ‚Üí –≤–µ—Ç–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞
    } catch {
        return false;
    }
}

(async () => {
    console.log(`üîç –ü—Ä–æ–≤–µ—Ä—è—é –≤–µ—Ç–∫—É "${branch}" –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ ${repoName}...`);
    if (!checkBranch(repoName, branch)) {
        console.error(`‚ùå –í–µ—Ç–∫–∞ "${branch}" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ ${repoName}`);
        process.exit(1);
    }

    console.log(`üì• –ö–æ–ø–∏—Ä—É—é ${repoName} (–≤–µ—Ç–∫–∞: ${branch}) –≤ ${TARGET_DIR}...`);
    const emitter = degit(`${repoName}#${branch}`, {
        cache: false,
        force: true,
        verbose: true,
    });

    await emitter.clone(TARGET_DIR);

    process.chdir(TARGET_DIR);

    console.log("üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è git...");
    execSync("git init", { stdio: "inherit" });
    execSync(`git branch -M ${branch}`, { stdio: "inherit" });

    console.log(`‚úÖ –ì–æ—Ç–æ–≤–æ! –ü—Ä–æ–µ–∫—Ç —Å–æ–∑–¥–∞–Ω –≤ –ø–∞–ø–∫–µ ${TARGET_DIR}`);
})();
